---
import { Image } from 'astro:assets';
import brandLogo from "../assets/brand-logo.png";
import { getLangFromUrl, useTranslations } from '../i18n/utils';
import { error } from 'astro/dist/core/logger/core';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---
<section id="contact" class="py-20 relative bg-dark-blue" >
    <div class="flex flex-col md:flex-row  w-4/5 ml-auto mr-auto max-md:gap-4">
        <div class="md:flex-1/2 lg:flex-2/3">
            <h1 class="sm:mt-4 max-md:text-4xl md:text-5xl lg:text-6xl max-md:text-center md:text-left font-bold text-white">{t("contact.title")}</h1>
            <h3 class="mt-4 max-md:text-2xl md:text-3xl max-md:text-center md:text-left text-white-blue">{t("contact.subtitle")}</h3>
            <Image class="lg:w-1/4 max-md:w-1/4 md:w-1/2 max-h-10px mt-5 ml-auto mr-auto self-center bg-white rounded-lg" src={brandLogo} alt={t("evogrowth.logo-alt")} />
        </div>
        <div x-data class="md:flex-1/2 h-auto lg:flex-1/3 bg-light-gray rounded-lg  p-5 ">
            <h3 class="text-2xl font-bold mb-5 max-md:text-center">{t("contact.form-title")}</h3>
            <form id="contact-form" name="contact" method="POST" netlify-honeypot="bot-field" data-netlify="true" class="flex flex-col gap-2 *:invalid:border-red-400 *:invalid:border-2">
                <input type="hidden" name="bot-field" />
                <input class="bg-white p-2 rounded-lg" type="text" name="name"  maxlength="100" pattern="[a-zA-Zñáéíóúü]+([\\s][a-zA-Zñáéíóúü]+)*" placeholder={t("contact.form-input-name")} title={t("contact.form-input-name")} />
                <input class="bg-white p-2 rounded-lg" type="email" name="email" placeholder={t("contact.form-input-email")} />
                <input class="bg-white p-2 rounded-lg" type="text" pattern="[\+][\\d]{1,2}[\\s][\\(][\\d]{3}[\\)][\\s][\\d]{3}[\\-][\\d]{4}" x-mask:dynamic="$input.startsWith('+1') ? '+9 (999) 999-9999' : '+99 (999) 999-9999'"  name="phone" placeholder={t("contact.form-input-phone")} title={t("contact.form-input-phone")} />
                <textarea class="bg-white p-2 rounded-lg h-25" name="message" minlength="3" maxlength="750" placeholder={t("contact.form-input-description")}  />
                <button class="bg-light-blue rounded-lg font-bold py-2 text-lg cursor-pointer" type="submit">{t("contact.form-button")}</button>
            </form>
        </div>
    </div>
</section>
<div hidden id="data" data-errorMessage={t('contact.form-error')} data-successMessage={ t('contact.form-success')} data-invalidMessage={t("contact.form-invalid")}/>
<script >
    import Swal from "sweetalert2";

    const dataElement = document.getElementById("data");

    //Trim inputs
    let inputs = document.querySelectorAll("input, textarea");
    inputs.forEach(i => {
        i.addEventListener("focusout", (e) => {
            i.value = i.value.trim();
        });
    })

    let form = document.getElementById("contact-form");
    form.addEventListener("submit", (e) => {
        e.preventDefault();
        const formData = new FormData(e.target);
        let valid = true;
        formData.entries().forEach((field) => {
            if (field[1] === "" && field[0] !== "bot-field") {
                Swal.fire({
                    title: dataElement.getAttribute("data-invalidMessage"),
                    icon: "error",
                    confirmButtonText: "¡Entendido!",
                })
                valid = false;
            }
        })

        if (valid) {
            fetch("/", {
                method: "POST",
                headers: { "Content-Type": "application/x-www-form-urlencoded" },
                body: new URLSearchParams(formData).toString()
            })
            .then(() => {
                Swal.fire({
                    title: dataElement.getAttribute("data-successMessage"),
                    icon: "success",
                    confirmButtonText: "¡Entendido!",
                })
            })
            .catch(error => {
                Swal.fire({
                    title: dataElement.getAttribute("data-errorMessage"),
                    icon: "error",
                    confirmButtonText: "¡Entendido!",
                })
            });
        }
    })
</script>